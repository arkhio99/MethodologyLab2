# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\form.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from HierarchyAnalysisMatrix import HierarchyAnalysisMatrix


class Ui_MainWindow(object):
    _matrix = None
    _features_to_add = []
    _examples_to_add = []

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(956, 731)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.table_feature = QtWidgets.QTableWidget(self.centralwidget)
        self.table_feature.setGeometry(QtCore.QRect(10, 150, 351, 261))
        self.table_feature.setObjectName("table_feature")
        self.table_feature.setColumnCount(0)
        self.table_feature.setRowCount(0)
        self.btn_add_feature = QtWidgets.QPushButton(self.centralwidget)
        self.btn_add_feature.setGeometry(QtCore.QRect(370, 48, 93, 28))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.btn_add_feature.setFont(font)
        self.btn_add_feature.setObjectName("btn_add_feature")
        self.text_editor_feature = QtWidgets.QLineEdit(self.centralwidget)
        self.text_editor_feature.setGeometry(QtCore.QRect(10, 48, 361, 27))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.text_editor_feature.setFont(font)
        self.text_editor_feature.setObjectName("text_editor_feature")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(20, 15, 171, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.btn_add_example = QtWidgets.QPushButton(self.centralwidget)
        self.btn_add_example.setGeometry(QtCore.QRect(850, 48, 91, 28))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.btn_add_example.setFont(font)
        self.btn_add_example.setObjectName("btn_add_example")
        self.text_editor_example = QtWidgets.QLineEdit(self.centralwidget)
        self.text_editor_example.setGeometry(QtCore.QRect(489, 48, 361, 27))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.text_editor_example.setFont(font)
        self.text_editor_example.setObjectName("text_editor_example")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(497, 14, 191, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.table_example_by_feature = QtWidgets.QTableWidget(self.centralwidget)
        self.table_example_by_feature.setGeometry(QtCore.QRect(487, 180, 361, 231))
        self.table_example_by_feature.setObjectName("table_example_by_feature")
        self.table_example_by_feature.setColumnCount(0)
        self.table_example_by_feature.setRowCount(0)
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(10, 120, 191, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.list_features = QtWidgets.QComboBox(self.centralwidget)
        self.list_features.setGeometry(QtCore.QRect(487, 150, 351, 22))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.list_features.setFont(font)
        self.list_features.setObjectName("list_features")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(487, 120, 381, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(20, 420, 201, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(177, 440, 41, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(176, 460, 41, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.lbl_eigen_value_feature = QtWidgets.QLabel(self.centralwidget)
        self.lbl_eigen_value_feature.setGeometry(QtCore.QRect(220, 420, 91, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lbl_eigen_value_feature.setFont(font)
        self.lbl_eigen_value_feature.setText("")
        self.lbl_eigen_value_feature.setObjectName("lbl_eigen_value_feature")
        self.lbl_concord_index_feature = QtWidgets.QLabel(self.centralwidget)
        self.lbl_concord_index_feature.setGeometry(QtCore.QRect(220, 438, 91, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lbl_concord_index_feature.setFont(font)
        self.lbl_concord_index_feature.setText("")
        self.lbl_concord_index_feature.setObjectName("lbl_concord_index_feature")
        self.lbl_concord_estimate_feature = QtWidgets.QLabel(self.centralwidget)
        self.lbl_concord_estimate_feature.setGeometry(QtCore.QRect(220, 457, 91, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lbl_concord_estimate_feature.setFont(font)
        self.lbl_concord_estimate_feature.setText("")
        self.lbl_concord_estimate_feature.setObjectName("lbl_concord_estimate_feature")
        self.lbl_eigen_value_example = QtWidgets.QLabel(self.centralwidget)
        self.lbl_eigen_value_example.setGeometry(QtCore.QRect(691, 420, 91, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lbl_eigen_value_example.setFont(font)
        self.lbl_eigen_value_example.setText("")
        self.lbl_eigen_value_example.setObjectName("lbl_eigen_value_example")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(491, 420, 201, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.lbl_concord_estimate_example = QtWidgets.QLabel(self.centralwidget)
        self.lbl_concord_estimate_example.setGeometry(QtCore.QRect(691, 457, 91, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lbl_concord_estimate_example.setFont(font)
        self.lbl_concord_estimate_example.setText("")
        self.lbl_concord_estimate_example.setObjectName("lbl_concord_estimate_example")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(648, 440, 41, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.lbl_concord_index_example = QtWidgets.QLabel(self.centralwidget)
        self.lbl_concord_index_example.setGeometry(QtCore.QRect(691, 438, 91, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lbl_concord_index_example.setFont(font)
        self.lbl_concord_index_example.setText("")
        self.lbl_concord_index_example.setObjectName("lbl_concord_index_example")
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(647, 460, 41, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.btn_calc_feature_priority = QtWidgets.QPushButton(self.centralwidget)
        self.btn_calc_feature_priority.setGeometry(QtCore.QRect(370, 120, 91, 28))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.btn_calc_feature_priority.setFont(font)
        self.btn_calc_feature_priority.setObjectName("btn_calc_feature_priority")
        self.btn_calc_example_priority_by_feature = QtWidgets.QPushButton(self.centralwidget)
        self.btn_calc_example_priority_by_feature.setGeometry(QtCore.QRect(850, 146, 93, 28))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.btn_calc_example_priority_by_feature.setFont(font)
        self.btn_calc_example_priority_by_feature.setObjectName("btn_calc_example_priority_by_feature")
        self.btn_calc_example_priotity = QtWidgets.QPushButton(self.centralwidget)
        self.btn_calc_example_priotity.setGeometry(QtCore.QRect(280, 490, 311, 31))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.btn_calc_example_priotity.setFont(font)
        self.btn_calc_example_priotity.setObjectName("btn_calc_example_priotity")
        self.cb_feature_1 = QtWidgets.QComboBox(self.centralwidget)
        self.cb_feature_1.setGeometry(QtCore.QRect(10, 81, 131, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.cb_feature_1.setFont(font)
        self.cb_feature_1.setObjectName("cb_feature_1")
        self.cb_feature_2 = QtWidgets.QComboBox(self.centralwidget)
        self.cb_feature_2.setGeometry(QtCore.QRect(140, 81, 141, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.cb_feature_2.setFont(font)
        self.cb_feature_2.setObjectName("cb_feature_2")
        self.text_editor_feature_priority = QtWidgets.QLineEdit(self.centralwidget)
        self.text_editor_feature_priority.setGeometry(QtCore.QRect(280, 81, 91, 31))
        self.text_editor_feature_priority.setObjectName("text_editor_feature_priority")
        self.btn_set_feature_priority = QtWidgets.QPushButton(self.centralwidget)
        self.btn_set_feature_priority.setGeometry(QtCore.QRect(370, 81, 93, 31))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.btn_set_feature_priority.setFont(font)
        self.btn_set_feature_priority.setObjectName("btn_set_feature_priority")
        self.cb_example_1 = QtWidgets.QComboBox(self.centralwidget)
        self.cb_example_1.setGeometry(QtCore.QRect(490, 80, 131, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.cb_example_1.setFont(font)
        self.cb_example_1.setObjectName("cb_example_1")
        self.text_editor_example_priority = QtWidgets.QLineEdit(self.centralwidget)
        self.text_editor_example_priority.setGeometry(QtCore.QRect(760, 80, 91, 31))
        self.text_editor_example_priority.setObjectName("text_editor_example_priority")
        self.cb_example_2 = QtWidgets.QComboBox(self.centralwidget)
        self.cb_example_2.setGeometry(QtCore.QRect(620, 80, 141, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.cb_example_2.setFont(font)
        self.cb_example_2.setObjectName("cb_example_2")
        self.btn_set_example_priority = QtWidgets.QPushButton(self.centralwidget)
        self.btn_set_example_priority.setGeometry(QtCore.QRect(850, 80, 93, 31))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.btn_set_example_priority.setFont(font)
        self.btn_set_example_priority.setObjectName("btn_set_example_priority")
        self.table_feature_priorities = QtWidgets.QTableWidget(self.centralwidget)
        self.table_feature_priorities.setGeometry(QtCore.QRect(373, 150, 81, 261))
        self.table_feature_priorities.setObjectName("table_feature_priorities")
        self.table_feature_priorities.setColumnCount(0)
        self.table_feature_priorities.setRowCount(0)
        self.table_example_priorities_by_deature = QtWidgets.QTableWidget(self.centralwidget)
        self.table_example_priorities_by_deature.setGeometry(QtCore.QRect(857, 180, 81, 231))
        self.table_example_priorities_by_deature.setObjectName("table_example_priorities_by_deature")
        self.table_example_priorities_by_deature.setColumnCount(0)
        self.table_example_priorities_by_deature.setRowCount(0)
        self.table_example_priorities = QtWidgets.QTableWidget(self.centralwidget)
        self.table_example_priorities.setGeometry(QtCore.QRect(35, 530, 891, 192))
        self.table_example_priorities.setObjectName("table_example_priorities")
        self.table_example_priorities.setColumnCount(0)
        self.table_example_priorities.setRowCount(0)
        self.btn_load = QtWidgets.QPushButton(self.centralwidget)
        self.btn_load.setGeometry(QtCore.QRect(210, 10, 141, 28))
        self.btn_load.setObjectName("btn_load")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        self._setActions()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "HierarchyAnalysisMatrix"))
        self.btn_add_feature.setText(_translate("MainWindow", "Добавить"))
        self.label.setText(_translate("MainWindow", "Добавить критерий"))
        self.btn_add_example.setText(_translate("MainWindow", "Добавить"))
        self.label_2.setText(_translate("MainWindow", "Добавить претендента"))
        self.label_3.setText(_translate("MainWindow", "Матрица критериев"))
        self.label_4.setText(_translate("MainWindow", "Матрица претенденов относительно критериев"))
        self.label_5.setText(_translate("MainWindow", "Собственное значение ="))
        self.label_6.setText(_translate("MainWindow", "ИС ="))
        self.label_7.setText(_translate("MainWindow", "ОС ="))
        self.label_8.setText(_translate("MainWindow", "Собственное значение ="))
        self.label_9.setText(_translate("MainWindow", "ИС ="))
        self.label_10.setText(_translate("MainWindow", "ОС ="))
        self.btn_calc_feature_priority.setText(_translate("MainWindow", "Рассчитать"))
        self.btn_calc_example_priority_by_feature.setText(_translate("MainWindow", "Рассчитать"))
        self.btn_calc_example_priotity.setText(_translate("MainWindow", "Рассчитать приоритеты для претендентов"))
        self.btn_set_feature_priority.setText(_translate("MainWindow", "Обновить"))
        self.btn_set_example_priority.setText(_translate("MainWindow", "Обновить"))
        self.btn_load.setText(_translate("MainWindow", "Загрузить пример"))

    def _setActions(self):
        self.btn_set_feature_priority.clicked.connect(self._setFeaturePriority)
        self.btn_set_example_priority.clicked.connect(self._setExamplePriorityByFeature)
        self.list_features.currentTextChanged.connect(self._updateExampleTable)
        self.btn_add_feature.clicked.connect(self._addFeature)
        self.btn_add_example.clicked.connect(self._addExample)
        self.btn_calc_feature_priority.clicked.connect(self._updateFeaturePriorityTable)
        self.btn_calc_example_priority_by_feature.clicked.connect(self._updateExamplePriorityByFeatureTable)
        self.btn_calc_example_priotity.clicked.connect(self._calcExamplePriorities)
        self.btn_load.clicked.connect(self._loadExample)

    def _setFeaturePriority(self):
        if self._matrix is None:
            return

        if self.cb_feature_1.currentText() == self.cb_feature_2.currentText():
            return

        self._matrix.set_value_feature(
            self.cb_feature_1.currentText(),
            self.cb_feature_2.currentText(),
            float(self.text_editor_feature_priority.text())
        )

        self._updateFeatureTable()

    def _setExamplePriorityByFeature(self):
        if self._matrix is None:
            return

        if self.cb_example_1.currentText() == self.cb_example_2.currentText():
            return

        self._matrix.set_value_example_by_feature(
            self.list_features.currentText(),
            self.cb_example_1.currentText(),
            self.cb_example_2.currentText(),
            float(self.text_editor_example_priority.text())
        )

        self._updateExampleTable()

    def _addFeature(self):
        feature = self.text_editor_feature.text()

        if feature == '':
            return None

        self.list_features.addItem(feature)
        self.cb_feature_1.addItem(feature)
        self.cb_feature_2.addItem(feature)
        if self._matrix is None:
            self._features_to_add.append(feature)
            if len(self._examples_to_add) != 0:
                self._matrix = HierarchyAnalysisMatrix(self._features_to_add, self._examples_to_add)
                self._features_to_add = None
        else:
            self._matrix.addFeature(feature)

        self._updateExampleTable()
        self._updateFeatureTable()

    def _addExample(self):
        example = self.text_editor_example.text()

        if example == '':
            return None

        self.cb_example_1.addItem(example)
        self.cb_example_2.addItem(example)
        if self._matrix is None:
            self._examples_to_add.append(example)
            if len(self._features_to_add) != 0:
                self._matrix = HierarchyAnalysisMatrix(self._features_to_add, self._examples_to_add)
                self._examples_to_add = None
        else:
            self._matrix.addExample(example)

        self._updateExampleTable()
        self._updateFeatureTable()

    def _updateExampleTable(self):
        if self._matrix is None:
            return

        examples = self._matrix.get_examples()
        self.table_example_by_feature.setRowCount(len(examples))
        self.table_example_by_feature.setColumnCount(len(examples))
        self.table_example_by_feature.setHorizontalHeaderLabels(examples)
        self.table_example_by_feature.setVerticalHeaderLabels(examples)
        row = 0
        for recessive_example in examples:
            col = 0
            for dominant_example in examples:
                cell_value = QtWidgets.QTableWidgetItem(
                    "%.2f" % (self._matrix.get_value_example_by_feature(
                        self.list_features.currentText(),
                        dominant_example,
                        recessive_example)))
                self.table_example_by_feature.setItem(row, col, cell_value)
                col += 1
            row += 1

    def _updateFeatureTable(self):
        if self._matrix is None:
            return

        features = self._matrix.get_features()
        self.table_feature.setRowCount(len(features))
        self.table_feature.setColumnCount(len(features))
        self.table_feature.setHorizontalHeaderLabels(features)
        self.table_feature.setVerticalHeaderLabels(features)
        row = 0
        for recessive_feature in features:
            col = 0
            for dominant_feature in features:
                cell_value = QtWidgets.QTableWidgetItem(
                    "%.2f" % (self._matrix.get_value_feature(
                        dominant_feature,
                        recessive_feature)))
                self.table_feature.setItem(row, col, cell_value)
                col += 1
            row += 1

    def _updateFeaturePriorityTable(self):
        if self._matrix is None:
            return

        feature_priority_vector = self._matrix.get_feature_priority_vector()
        self.table_feature_priorities.setRowCount(len(feature_priority_vector))
        self.table_feature_priorities.setColumnCount(1)
        for i in range(0, len(feature_priority_vector)):
            cell_value = QtWidgets.QTableWidgetItem("%.2f" % (feature_priority_vector[i]))
            self.table_feature_priorities.setItem(i, 0, cell_value)

        concord_data = self._matrix.get_feature_concord_data()
        self.lbl_eigen_value_feature.setText("%.2f" % (concord_data["EigenValue"]))
        self.lbl_concord_index_feature.setText("%.2f" % (concord_data["ConcordIndex"]))
        self.lbl_concord_estimate_feature.setText("%.2f" % (concord_data["ConcordEstimate"]))

    def _updateExamplePriorityByFeatureTable(self):
        if self._matrix is None:
            return

        feature = self.list_features.currentText()
        example_by_feature_priority_vector = self._matrix.get_example_priority_vector(feature)
        self.table_example_priorities_by_deature.setRowCount(len(example_by_feature_priority_vector))
        self.table_example_priorities_by_deature.setColumnCount(1)
        for i in range(0, len(example_by_feature_priority_vector)):
            cell_value = QtWidgets.QTableWidgetItem("%.2f" % (example_by_feature_priority_vector[i]))
            self.table_example_priorities_by_deature.setItem(i, 0, cell_value)

        concord_data = self._matrix.get_example_concord_data(feature)
        self.lbl_eigen_value_example.setText("%.2f" % (concord_data["EigenValue"]))
        self.lbl_concord_index_example.setText("%.2f" % (concord_data["ConcordIndex"]))
        self.lbl_concord_estimate_example.setText("%.2f" % (concord_data["ConcordEstimate"]))

    def _calcExamplePriorities(self):
        if self._matrix is None:
            return

        example_priorities = self._matrix.calculate_result_priorities_for_examples()
        shape = example_priorities.shape
        self.table_example_priorities.setRowCount(shape[0])
        self.table_example_priorities.setColumnCount(shape[1])
        self.table_example_priorities.setHorizontalHeaderLabels(["%.2f" % value if isinstance(value, float) else value for value in example_priorities.columns])
        self.table_example_priorities.setVerticalHeaderLabels(example_priorities.index)
        i = 0
        for row in example_priorities.index:
            j = 0
            for col in example_priorities.columns:
                cell_value = QtWidgets.QTableWidgetItem("%.2f" % (example_priorities.at[row, col]))
                self.table_example_priorities.setItem(i, j, cell_value)
                j += 1
            i += 1
            
    def _loadExample(self):
        features = ["Стоимость", 'Стоимость расходников', 'Шум', 'Качество']
        examples = ['Матричный', 'Струйный', 'Лазерный']
        self._matrix = HierarchyAnalysisMatrix(features, examples)
        self.list_features.addItems(features)
        self.cb_feature_1.addItems(features)
        self.cb_feature_2.addItems(features)
        self.cb_example_1.addItems(examples)
        self.cb_feature_2.addItems(examples)
        
        self._matrix.set_value_feature('Стоимость расходников', 'Стоимость', 4)
        self._matrix.set_value_feature('Шум', 'Стоимость', 2)
        self._matrix.set_value_feature('Качество', 'Стоимость', 0.5)
        self._matrix.set_value_feature('Шум', 'Стоимость расходников', 1 / 3)
        self._matrix.set_value_feature('Качество', 'Стоимость расходников', 1 / 6)
        self._matrix.set_value_feature('Качество', 'Шум', 1 / 6)

        self._matrix.set_value_example_by_feature('Стоимость', 'Струйный', 'Матричный', 2)
        self._matrix.set_value_example_by_feature('Стоимость', 'Лазерный', 'Матричный', 4)
        self._matrix.set_value_example_by_feature('Стоимость', 'Лазерный', 'Струйный', 3)

        self._matrix.set_value_example_by_feature('Стоимость расходников', 'Струйный', 'Матричный', 4)
        self._matrix.set_value_example_by_feature('Стоимость расходников', 'Лазерный', 'Матричный', 9)
        self._matrix.set_value_example_by_feature('Стоимость расходников', 'Лазерный', 'Струйный', 2)

        self._matrix.set_value_example_by_feature('Шум', 'Струйный', 'Матричный', 1 / 6)
        self._matrix.set_value_example_by_feature('Шум', 'Лазерный', 'Матричный', 1 / 8)
        self._matrix.set_value_example_by_feature('Шум', 'Лазерный', 'Струйный', 1 / 2)

        self._matrix.set_value_example_by_feature('Качество', 'Струйный', 'Матричный', 1 / 6)
        self._matrix.set_value_example_by_feature('Качество', 'Лазерный', 'Матричный', 1 / 9)
        self._matrix.set_value_example_by_feature('Качество', 'Лазерный', 'Струйный', 1 / 3)

        self._updateFeatureTable()
        self._updateExampleTable()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
